<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.spark</groupId>
    <artifactId>chipro</artifactId>
    <version>latest</version>
    <modules>
        <module>chipro-core</module>
        <module>chipro-test</module>
        <module>chipro-oss</module>
        <module>chipro-manage</module>
        <module>chipro-community</module>
        <module>chipro-websocket</module>
    </modules>
    <packaging>pom</packaging>
    <!--设置springboot为父类-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-parent</artifactId>
        <version>2.0.4.RELEASE</version>
    </parent>

    <!--设置统一版本-->
    <properties>
        <dockerfile.path>${project.basedir}</dockerfile.path>
        <!-- 文件拷贝时的编码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 编译时的编码 -->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <servlet.api.version>3.0.1</servlet.api.version>
        <jstl.version>1.2</jstl.version>
        <jsp-api.version>2.0</jsp-api.version>
        <!-- jdk -->
        <jdk.version>1.8</jdk.version>
        <!--spring-boot-->
        <spring-boot.version>2.0.4.RELEASE</spring-boot.version>
        <!--spring-cloud-->
        <spring-cloud.version>Finchley.SR1</spring-cloud.version>
        <!--spring-cloud-alibaba-->
        <spring-cloud-alibaba.version>2.1.0.RELEASE</spring-cloud-alibaba.version>
        <!--spring-->
        <spring.version>5.2.7.RELEASE</spring.version><!-- 5.0.9.RELEASE -->
        <!--json-->
        <fasterxml.jackson.version>2.9.7</fasterxml.jackson.version><!-- 2.9.5 -->
        <hibernate-validator.version>6.0.13.Final</hibernate-validator.version>
        <!-- 阿里巴巴 JSON工具fastjson -->
        <fastjson.version>1.2.58</fastjson.version>
        <!-- Google JSON工具gson -->
        <gson.version>2.8.5</gson.version>
        <!-- mybatis版本号 -->
        <mybatis.version>3.4.6</mybatis.version>  <!-- 3.2.8 -->
        <mybatis-plus.version>3.0.6</mybatis-plus.version><!-- 2.3 -->
        <!--mybatis集合包-->
        <mybatis-starter.version>2.0.1</mybatis-starter.version>
        <!--mybatis-plus集合包-->
        <mybatis-plus-starter.version>3.1.2</mybatis-plus-starter.version>
        <!-- druid数据源 版本 -->
        <druid.version>1.1.12</druid.version><!-- 1.1.10 -->
        <!--redis缓存 -->
        <spring-data-redis.version>2.1.0.RELEASE</spring-data-redis.version>
        <!-- 日志 -->
        <slf4j.version>1.7.25</slf4j.version>
        <log4j2.version>2.11.1</log4j2.version>
        <!-- lombok 插件 -->
        <lombok.version>1.18.2</lombok.version>
        <dubbo.boot.version>2.0.0</dubbo.boot.version>
        <curator-framework.version>2.12.0</curator-framework.version>
        <!--hutool-->
        <hutool.version>4.5.2</hutool.version>
        <!--api在线文档-->
        <swagger.version>2.9.2</swagger.version>
        <!--mysql-->
        <mysql.version>5.1.45</mysql.version>
        <!--docker私服地址-->
        <docker.image.host>www.liliguang.top</docker.image.host>
        <!--镜像前缀-->
        <docker.image.prefix>chipro</docker.image.prefix>
        <!--swagger-->
        <swagger.version>2.9.2</swagger.version>
    </properties>
    <!--父类依赖，子项目按需继承，可以不用写版本号-->
    <dependencyManagement>
        <dependencies>
            <!-- 指定spring boot 版本 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 指定spring cloud 版本-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 指定spring cloud alibaba 版本-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 自动生成代码 -->
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>1.3.7</version>
            </dependency>
            <!-- Tomcat servlet -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet.api.version}</version>
            </dependency>
            <!-- Tomcat jsp -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jsp-api</artifactId>
                <version>${jsp-api.version}</version>
                <scope>provided</scope><!-- 只在编译的时候 -->
            </dependency>
            <!-- Tomcat jstl -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>${jstl.version}</version>
                <scope>provided</scope><!-- 只在编译的时候 -->
            </dependency>
            <!-- jersey-servlet -->
            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-servlet</artifactId>
                <version>1.19.4</version>
            </dependency>
            <!--Spring Start -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Spring End -->

            <!-- hibernate-validator -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>


            <!-- alibaba的fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- 判断Web容器类型 -->
            <dependency>
                <groupId>com.liferay.portal</groupId>
                <artifactId>portal-kernel</artifactId>
                <version>5.2.3</version>
                <!-- <scope>provided</scope> -->
            </dependency>
            <!-- apache公共包 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.7</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>4.2</version>
            </dependency>

            <!-- 文件上传下载 -->
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.3.3</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.2</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.9.3</version>
            </dependency>

            <!--mysql连接器-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!-- mybatis核心包 -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <!-- mybatis/spring包 -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>1.3.2</version>
            </dependency>
            <!-- Mybatis-Plus ,mybatis的一个增强工具包 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!--mybatis-plus集合包-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-starter.version}</version>
            </dependency>
            <!-- druid数据源 版本 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>1.23</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>


            <!--<dependency>-->
            <!--<groupId>jdk.tools</groupId>-->
            <!--<artifactId>jdk.tools</artifactId>-->
            <!--<version>1.8</version>-->
            <!--<scope>system</scope>-->
            <!--<systemPath>${JAVA_HOME}/lib/tools.jar</systemPath>-->
            <!--</dependency>-->

            <!-- 添加以下slf4j和log4j2的依赖. -->

            <!-- slf4j核心包-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!--核心log4j2jar包-->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <!--用于与slf4j保持桥接-->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <!--web工程需要包含log4j-web，非web工程不需要-->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-web</artifactId>
                <version>${log4j2.version}</version>
            </dependency>

            <!--需要使用log4j2的AsyncLogger需要包含disruptor-->
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>3.4.2</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator-framework.version}</version>
            </dependency>
            <!--hutool 工具包-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!-- swagger ui -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <!-- swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>
    <!--父类依赖，子类直接继承，什么都不用写-->
    <dependencies>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
<!--                <plugin>-->
<!--                    <groupId>com.spotify</groupId>-->
<!--                    <artifactId>dockerfile-maven-plugin</artifactId>-->
<!--                    <version>1.4.10</version>-->
<!--                    <executions>-->
<!--                        &lt;!&ndash;通过mvn package 将会执行docker构建，推送功能&ndash;&gt;-->
<!--                        <execution>-->
<!--                            <id>tag-package</id>-->
<!--                            <phase>package</phase>-->
<!--                            <goals>-->
<!--                                <goal>build</goal>-->
<!--                                <goal>tag</goal>-->
<!--                                <goal>push</goal>-->
<!--                            </goals>-->
<!--                            <configuration>-->
<!--                                <tag>${project.version}</tag>-->
<!--                            </configuration>-->
<!--                        </execution>-->
<!--                        &lt;!&ndash;<execution>&ndash;&gt;-->
<!--                        &lt;!&ndash;<id>default</id>&ndash;&gt;-->
<!--                        &lt;!&ndash;<goals>&ndash;&gt;-->
<!--                        &lt;!&ndash;<goal>build</goal>&ndash;&gt;-->
<!--                        &lt;!&ndash;<goal>push</goal>&ndash;&gt;-->
<!--                        &lt;!&ndash;</goals>&ndash;&gt;-->
<!--                        &lt;!&ndash;</execution>&ndash;&gt;-->
<!--                    </executions>-->
<!--                    <configuration>-->
<!--                        &lt;!&ndash;使用maven的setting.xml方式配置授权&ndash;&gt;-->
<!--                        <useMavenSettingsForAuth>true</useMavenSettingsForAuth>-->
<!--                        <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>-->
<!--                        &lt;!&ndash;授权的账号密码，经测试不起作用&ndash;&gt;-->
<!--                        &lt;!&ndash;<username>13711919653</username>&ndash;&gt;-->
<!--                        &lt;!&ndash;<password>llg1997729</password>&ndash;&gt;-->
<!--                        &lt;!&ndash;仓库地址&ndash;&gt;-->
<!--                        <repository>${docker.image.host}/${docker.image.prefix}/${project.artifactId}</repository>-->
<!--                        <dockerfile>Dockerfile</dockerfile>-->
<!--                        <contextDirectory>${project.basedir}</contextDirectory>-->
<!--                        <tag>${project.version}</tag>-->
<!--                        <buildArgs>-->
<!--                            <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>-->
<!--                        </buildArgs>-->
<!--                    </configuration>-->
<!--                </plugin>-->
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <!-- 一键更新子模块版本号 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
            </plugin>
        </plugins>
    </build>


</project>